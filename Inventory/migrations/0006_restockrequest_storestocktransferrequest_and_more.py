# Generated by Django 5.2.3 on 2025-07-10 20:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Inventory', '0005_productcategory'),
        ('store', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RestockRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('requested_quantity', models.PositiveIntegerField(help_text='Quantity requested for restock')),
                ('current_stock', models.PositiveIntegerField(help_text='Current stock level at time of request')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('reason', models.TextField(help_text='Reason for restock request')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('fulfilled', 'Fulfilled')], default='pending', max_length=20)),
                ('requested_date', models.DateTimeField(auto_now_add=True)),
                ('reviewed_date', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True, help_text='Notes from head manager review')),
                ('approved_quantity', models.PositiveIntegerField(blank=True, help_text='Quantity approved by head manager', null=True)),
                ('fulfilled_quantity', models.PositiveIntegerField(blank=True, help_text='Actual quantity fulfilled', null=True)),
                ('fulfilled_date', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restock_requests', to='Inventory.product')),
                ('requested_by', models.ForeignKey(limit_choices_to={'role': 'store_manager'}, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_restock_requests', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'head_manager'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_restock_requests', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restock_requests', to='store.store')),
            ],
            options={
                'ordering': ['-requested_date'],
            },
        ),
        migrations.CreateModel(
            name='StoreStockTransferRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('requested_quantity', models.PositiveIntegerField(help_text='Quantity requested for transfer')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('reason', models.TextField(help_text='Reason for stock transfer request')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('in_transit', 'In Transit'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('requested_date', models.DateTimeField(auto_now_add=True)),
                ('reviewed_date', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True, help_text='Notes from head manager review')),
                ('approved_quantity', models.PositiveIntegerField(blank=True, help_text='Quantity approved for transfer', null=True)),
                ('shipped_date', models.DateTimeField(blank=True, null=True)),
                ('received_date', models.DateTimeField(blank=True, null=True)),
                ('actual_quantity_transferred', models.PositiveIntegerField(blank=True, help_text='Actual quantity transferred', null=True)),
                ('from_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transfer_requests', to='store.store')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_requests', to='Inventory.product')),
                ('requested_by', models.ForeignKey(limit_choices_to={'role': 'store_manager'}, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_transfer_requests', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'head_manager'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_transfer_requests', to=settings.AUTH_USER_MODEL)),
                ('to_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transfer_requests', to='store.store')),
            ],
            options={
                'ordering': ['-requested_date'],
            },
        ),
        migrations.CreateModel(
            name='RequestNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('restock_submitted', 'Restock Request Submitted'), ('restock_approved', 'Restock Request Approved'), ('restock_rejected', 'Restock Request Rejected'), ('restock_fulfilled', 'Restock Request Fulfilled'), ('transfer_submitted', 'Transfer Request Submitted'), ('transfer_approved', 'Transfer Request Approved'), ('transfer_rejected', 'Transfer Request Rejected'), ('transfer_completed', 'Transfer Request Completed')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_notifications', to=settings.AUTH_USER_MODEL)),
                ('restock_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Inventory.restockrequest')),
                ('transfer_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Inventory.storestocktransferrequest')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.AddIndex(
            model_name='restockrequest',
            index=models.Index(fields=['request_number'], name='Inventory_r_request_660067_idx'),
        ),
        migrations.AddIndex(
            model_name='restockrequest',
            index=models.Index(fields=['store', 'status'], name='Inventory_r_store_i_1fcd51_idx'),
        ),
        migrations.AddIndex(
            model_name='restockrequest',
            index=models.Index(fields=['product', 'status'], name='Inventory_r_product_2f8d66_idx'),
        ),
        migrations.AddIndex(
            model_name='restockrequest',
            index=models.Index(fields=['requested_date'], name='Inventory_r_request_705fe1_idx'),
        ),
        migrations.AddIndex(
            model_name='restockrequest',
            index=models.Index(fields=['status'], name='Inventory_r_status_203656_idx'),
        ),
        migrations.AddIndex(
            model_name='storestocktransferrequest',
            index=models.Index(fields=['request_number'], name='Inventory_s_request_cdace2_idx'),
        ),
        migrations.AddIndex(
            model_name='storestocktransferrequest',
            index=models.Index(fields=['from_store', 'status'], name='Inventory_s_from_st_4a21ad_idx'),
        ),
        migrations.AddIndex(
            model_name='storestocktransferrequest',
            index=models.Index(fields=['to_store', 'status'], name='Inventory_s_to_stor_90d3c0_idx'),
        ),
        migrations.AddIndex(
            model_name='storestocktransferrequest',
            index=models.Index(fields=['product', 'status'], name='Inventory_s_product_41e168_idx'),
        ),
        migrations.AddIndex(
            model_name='storestocktransferrequest',
            index=models.Index(fields=['requested_date'], name='Inventory_s_request_ee42ca_idx'),
        ),
        migrations.AddIndex(
            model_name='storestocktransferrequest',
            index=models.Index(fields=['status'], name='Inventory_s_status_246e8a_idx'),
        ),
        migrations.AddIndex(
            model_name='requestnotification',
            index=models.Index(fields=['recipient', 'is_read'], name='Inventory_r_recipie_52a743_idx'),
        ),
        migrations.AddIndex(
            model_name='requestnotification',
            index=models.Index(fields=['created_date'], name='Inventory_r_created_0c086f_idx'),
        ),
        migrations.AddIndex(
            model_name='requestnotification',
            index=models.Index(fields=['notification_type'], name='Inventory_r_notific_5a7e5d_idx'),
        ),
    ]
