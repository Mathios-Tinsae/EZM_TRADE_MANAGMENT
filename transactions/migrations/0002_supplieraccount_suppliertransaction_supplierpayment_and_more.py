# Generated by Django 5.2.3 on 2025-07-09 19:26

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Inventory', '0002_initial'),
        ('transactions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SupplierAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(help_text='Unique account number for the supplier', max_length=50, unique=True)),
                ('current_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Current outstanding balance (positive = we owe supplier)', max_digits=12)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Maximum credit limit allowed for this supplier', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('payment_terms', models.CharField(choices=[('net_30', 'Net 30 Days'), ('net_60', 'Net 60 Days'), ('net_90', 'Net 90 Days'), ('immediate', 'Immediate Payment'), ('cod', 'Cash on Delivery'), ('advance', 'Advance Payment')], default='net_30', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('supplier', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account', to='Inventory.supplier')),
            ],
            options={
                'ordering': ['supplier__name'],
            },
        ),
        migrations.CreateModel(
            name='SupplierTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_number', models.CharField(help_text='Unique transaction reference number', max_length=50, unique=True)),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('payment', 'Payment'), ('credit', 'Credit'), ('debit', 'Debit'), ('adjustment', 'Adjustment'), ('refund', 'Refund')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('description', models.TextField(help_text='Description of the transaction')),
                ('reference_number', models.CharField(blank=True, help_text='External reference number (PO, invoice, etc.)', max_length=100)),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_supplier_transactions', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_supplier_transactions', to=settings.AUTH_USER_MODEL)),
                ('purchase_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supplier_transactions', to='Inventory.purchaseorder')),
                ('supplier_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='transactions.supplieraccount')),
            ],
            options={
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='SupplierPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_number', models.CharField(help_text='Unique payment reference number', max_length=50, unique=True)),
                ('payment_method', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('check', 'Check'), ('cash', 'Cash'), ('credit_card', 'Credit Card'), ('wire_transfer', 'Wire Transfer'), ('mobile_payment', 'Mobile Payment')], max_length=20)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateField(help_text='Payment due date')),
                ('bank_reference', models.CharField(blank=True, help_text='Bank transaction reference', max_length=100)),
                ('check_number', models.CharField(blank=True, help_text='Check number if payment by check', max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('processed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='processed_supplier_payments', to=settings.AUTH_USER_MODEL)),
                ('supplier_transaction', models.OneToOneField(limit_choices_to={'transaction_type': 'payment'}, on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='transactions.suppliertransaction')),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='SupplierInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(help_text="Supplier's invoice number", max_length=100, unique=True)),
                ('invoice_date', models.DateField(help_text="Date on the supplier's invoice")),
                ('due_date', models.DateField(help_text='Payment due date')),
                ('received_date', models.DateTimeField(auto_now_add=True)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('status', models.CharField(choices=[('received', 'Received'), ('verified', 'Verified'), ('approved', 'Approved'), ('paid', 'Paid'), ('disputed', 'Disputed'), ('cancelled', 'Cancelled')], default='received', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('verified_date', models.DateTimeField(blank=True, null=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('invoice_document', models.FileField(blank=True, help_text="Upload the supplier's invoice document", null=True, upload_to='supplier_invoices/')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_supplier_invoices', to=settings.AUTH_USER_MODEL)),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='Inventory.purchaseorder')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_supplier_invoices', to=settings.AUTH_USER_MODEL)),
                ('supplier_transaction', models.OneToOneField(limit_choices_to={'transaction_type': 'purchase'}, on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='transactions.suppliertransaction')),
            ],
            options={
                'ordering': ['-received_date'],
            },
        ),
        migrations.CreateModel(
            name='SupplierCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_number', models.CharField(help_text='Unique credit reference number', max_length=50, unique=True)),
                ('credit_type', models.CharField(choices=[('refund', 'Refund'), ('return', 'Return Credit'), ('discount', 'Discount'), ('adjustment', 'Adjustment'), ('overpayment', 'Overpayment Credit'), ('promotional', 'Promotional Credit')], max_length=20)),
                ('credit_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('reason', models.TextField(help_text='Reason for the credit')),
                ('original_invoice', models.CharField(blank=True, help_text='Original invoice number if applicable', max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('applied', 'Applied'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('credit_date', models.DateTimeField(auto_now_add=True)),
                ('applied_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_supplier_credits', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='requested_supplier_credits', to=settings.AUTH_USER_MODEL)),
                ('supplier_transaction', models.OneToOneField(limit_choices_to={'transaction_type': 'credit'}, on_delete=django.db.models.deletion.CASCADE, related_name='credit', to='transactions.suppliertransaction')),
            ],
            options={
                'ordering': ['-credit_date'],
            },
        ),
        migrations.AddIndex(
            model_name='supplieraccount',
            index=models.Index(fields=['account_number'], name='transaction_account_98b89b_idx'),
        ),
        migrations.AddIndex(
            model_name='supplieraccount',
            index=models.Index(fields=['supplier'], name='transaction_supplie_eab3e5_idx'),
        ),
        migrations.AddIndex(
            model_name='supplieraccount',
            index=models.Index(fields=['current_balance'], name='transaction_current_bafc1a_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliertransaction',
            index=models.Index(fields=['transaction_number'], name='transaction_transac_22a532_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliertransaction',
            index=models.Index(fields=['supplier_account'], name='transaction_supplie_4db8c3_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliertransaction',
            index=models.Index(fields=['transaction_type'], name='transaction_transac_e49af4_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliertransaction',
            index=models.Index(fields=['status'], name='transaction_status_6de098_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliertransaction',
            index=models.Index(fields=['transaction_date'], name='transaction_transac_189de2_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierpayment',
            index=models.Index(fields=['payment_number'], name='transaction_payment_591c8b_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierpayment',
            index=models.Index(fields=['payment_date'], name='transaction_payment_79de02_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierpayment',
            index=models.Index(fields=['due_date'], name='transaction_due_dat_8024ed_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierpayment',
            index=models.Index(fields=['status'], name='transaction_status_18caae_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierinvoice',
            index=models.Index(fields=['invoice_number'], name='transaction_invoice_7dc02c_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierinvoice',
            index=models.Index(fields=['invoice_date'], name='transaction_invoice_f2159d_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierinvoice',
            index=models.Index(fields=['due_date'], name='transaction_due_dat_827c9f_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierinvoice',
            index=models.Index(fields=['status'], name='transaction_status_c3c198_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierinvoice',
            index=models.Index(fields=['received_date'], name='transaction_receive_1004cc_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliercredit',
            index=models.Index(fields=['credit_number'], name='transaction_credit__c37019_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliercredit',
            index=models.Index(fields=['credit_date'], name='transaction_credit__ec92c2_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliercredit',
            index=models.Index(fields=['status'], name='transaction_status_c7845e_idx'),
        ),
        migrations.AddIndex(
            model_name='suppliercredit',
            index=models.Index(fields=['credit_type'], name='transaction_credit__087dec_idx'),
        ),
    ]
